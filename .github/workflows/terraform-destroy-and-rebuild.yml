
name: 'DESTROY terraform and rebuild'

on: 
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.3
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform (destroy mode)
    - name: Generate DESTROY plan
      run: terraform plan -destroy

    # On push to master, DESTROY infrastructure according to Terraform configuration files
    - name: DESTROY infrastructure
      run: terraform apply -destroy -auto-approve

    # Build cluster first
    - name: Terraform Apply (cluster first)
      run: terraform apply -target=digitalocean_kubernetes_cluster.k8s -auto-approve

    # REBUILD infrastructure according to Terraform configuration files
    - name: Terraform Apply (the rest)
      run: terraform apply -auto-approve
